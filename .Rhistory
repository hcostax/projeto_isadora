x = 0.05,
y = 0.0099,
just = c('left', 'bottom'),
width = unit(0.5, 'inches')
)
# Closing the graphical device
dev.off()
itau.s1_776 %>%
ggplot(aes(x = Data, y = Qtd_cotas)) +
geom_line(size=.8, colour='#f38223')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \ndo segmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: SGS - Sistema Gerenciador de Séries Temporais, 2021 \nElaboração: Henrique Costa "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Data, y = Qtd_cotas)) +
geom_line(size=.8, colour='#f38223')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: SGS - Sistema Gerenciador de Séries Temporais, 2021 \nElaboração: Henrique Costa "
)  +
theme_custom()
suppressMessages(library(Cairo))
Cairo(file = here::here(
"outputs",
paste0("quantidade_cotas__",
format(
Sys.time(),
"%d-%m-%Y"),
".png")
),
type="png",
units="in",
width=8,
height=5,
pointsize=12*300/72,
dpi=300)
itau.s1_776 %>%
ggplot(aes(x = Data, y = Qtd_cotas)) +
geom_line(size=.8, colour='#f38223')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: SGS - Sistema Gerenciador de Séries Temporais, 2021 \nElaboração: Henrique Costa "
)  +
theme_custom()
grid::grid.raster(
logo,
x = 0.05,
y = 0.0099,
just = c('left', 'bottom'),
width = unit(0.5, 'inches')
)
# Closing the graphical device
dev.off()
itau.s1_776 %>%
ggplot(aes(x = Data, y = Qtd_cotas)) +
geom_line(size=.8, colour='#f38223')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com/ "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Data, y = Tax_adm)) +
geom_line(size=.8, colour='blue')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
theme_custom <- function(){
font <- "Myriad Pro"            # assign font family up front
#theme_minimal() %+replace%    # replace elements we want to change
theme(
#grid elements
panel.grid.major = element_blank(),    # strip major gridlines
panel.grid.minor = element_blank(),    # strip minor gridlines
axis.ticks = element_blank(),          # strip axis ticks
# since theme_minimal() already strips axis lines,
# we don't need to do that again
# text elements
plot.title = element_text(             # title
family = font,            # set font family
size = 20,                # set font size
face = 'bold',            # bold typeface
color = "#fb6404",        # set font color
hjust = 0.5,              # middle align*
vjust = 2),               # raise slightly*
# *The value of hjust and vjust are only defined between 0 and 1:
# 0 means left-justified
# 1 means right-justified
# 0.5 means middle-justified
plot.subtitle = element_text(          # subtitle
family = font,                       # font family
color= "#2e2e2e",                    # set font color
size = 12,
hjust = 0.5,              # middle align*
vjust = 2),                          # font size
plot.caption = element_text(           # caption
family = font,                       # font family
size = 9,                            # font size
face = "italic",                     # italic typeface
colour = "#4c4c4c",                  # set font color
hjust = 1),                          # right align
axis.title = element_text(             # axis titles
family = font,                       # font family
face = 'bold',                       # bold typeface
color = "#2e2e2e",                   # set font color
size = 10),                          # font size
axis.text = element_text(              # axis text
family = font,                       # axis family
color = "#2e2e2e",                   # set font color
size = 9),                           # font size
axis.text.x = element_text(            # margin for axis text
color = "#2e2e2e",                   # set font color
margin=margin(5, b = 10)),
axis.text.y = element_text(            # margin for axis text
color = "#2e2e2e",                   # set font color
margin=margin(10, b = 20)),
legend.position="bottom",              # set the legend position
legend.title = element_blank(),        # set NULL legend tittle
legend.text = element_text(
colour="#2e2e2e",                    # set legend text color
family = font                       # font family
)
# since the legend often requires manual tweaking
# based on plot content, don't define it here
)
}
itau.s1_776 %>%
ggplot(aes(x = Data, y = Tax_adm)) +
geom_line(size=.8, colour='blue')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2)
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE)
Cairo(file = here::here(
"outputs",
paste0("taxa_adm__",
format(
Sys.time(),
"%d-%m-%Y"),
".png")
),
type="png",
units="in",
width=8,
height=5,
pointsize=12*300/72,
dpi=300)
itau.s1_776 %>%
ggplot(aes(x = Data, y = Tax_adm)) +
geom_line(size=.8, colour='blue')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
grid::grid.raster(
logo,
x = 0.05,
y = 0.0099,
just = c('left', 'bottom'),
width = unit(0.5, 'inches')
)
# Closing the graphical device
dev.off()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
View(itau.s1_776)
128 - 116
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE)
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
# geom_smooth(method = lm, se = TRUE) +
# annotate("rect", fill = "gray50", alpha = 0.3,
#          xmin = ,
#          xmax = as.Date(Sys.Date()),
#          ymin = -Inf, ymax = Inf)+
#
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
# annotate("rect", fill = "gray50", alpha = 0.3,
#          xmin = ,
#          xmax = as.Date(Sys.Date()),
#          ymin = -Inf, ymax = Inf)+
#
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Data, y = Tax_adm)) +
geom_line(size=.8, colour='blue')+
annotate("rect", fill = "gray50", alpha = 0.3,
xmin = as.Date('2020-02-26'),
xmax = as.Date(Sys.Date()),
ymin = -Inf, ymax = Inf)+
scale_x_date(breaks = date_breaks("1 year"),
labels = date_format("%Y"))+
labs(
x = NULL,
y = NULL,
title = "Banco de dados de consórcios - BACEN",
subtitle = "Taxa de administração praticadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
# annotate("rect", fill = "gray50", alpha = 0.3,
#          xmin = ,
#          xmax = as.Date(Sys.Date()),
#          ymin = -Inf, ymax = Inf)+
#
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = "Taxa de Administração",
y = "Quantidade de Cotas comercializadas por mês",
title = "Banco de dados de consórcios - BACEN",
subtitle = "Quantidade de cotas comercializadas no mês \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
# annotate("rect", fill = "gray50", alpha = 0.3,
#          xmin = ,
#          xmax = as.Date(Sys.Date()),
#          ymin = -Inf, ymax = Inf)+
#
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = "Taxa de Administração",
y = "Quantidade de Cotas comercializadas por mês",
title = "Banco de dados de consórcios - BACEN",
subtitle = "Dispersão e reta de regressão (relação entre X e Y) \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
# carregar o tema customizado
source(here::here(
"scripts",
"theme_custom.R")
)
suppressMessages(library(tidyverse))
suppressMessages(library(scales))
# pacote para inserir a logo
suppressMessages(library(magick))
#read logo
logo <- image_read(here::here(
"scripts",
"logo-itau.png"))
suppressMessages(library(Cairo))
Cairo(file = here::here(
"outputs",
paste0("dispersao_lm__",
format(
Sys.time(),
"%d-%m-%Y"),
".png")
),
type="png",
units="in",
width=8,
height=5,
pointsize=12*300/72,
dpi=300)
itau.s1_776 %>%
ggplot(aes(x = Tax_adm, y = Qtd_cotas)) +
geom_point(color = "orange", size = 2) +
geom_smooth(method = lm, se = TRUE) +
# annotate("rect", fill = "gray50", alpha = 0.3,
#          xmin = ,
#          xmax = as.Date(Sys.Date()),
#          ymin = -Inf, ymax = Inf)+
#
# scale_x_date(breaks = date_breaks("1 year"),
#              labels = date_format("%Y"))+
labs(
x = "Taxa de Administração",
y = "Quantidade de Cotas comercializadas por mês",
title = "Banco de dados de consórcios - BACEN",
subtitle = "Dispersão e reta de regressão (relação entre X e Y) \nSegmento 1: bens imóveis, para ITAÚ ADM DE CONSÓRCIOS LTDA",
caption = " \nFonte: BACEN - Banco Central do Brasil, 2021 \nElaboração: https://hcostax.com "
)  +
theme_custom()
grid::grid.raster(
logo,
x = 0.05,
y = 0.0099,
just = c('left', 'bottom'),
width = unit(0.5, 'inches')
)
# Closing the graphical device
dev.off()
itau.s1_776 %>%
ggplot(aes(x = Qtd_cotas)) +
geom_histogram(alpha = 0.45,
fill = "cornflowerblue")
install.packages("memisc")
library(knitr)
library(rmdformats)
library(formattable)
library(tidyverse)
library(tsibble)
library(lubridate)
library(feasts)
library(fable)
library(fable.prophet)
library(kableExtra)
library(scales)
## Global options
options(max.print = "75")
opts_chunk$set(echo = FALSE,
cache = FALSE,
prompt = FALSE,
tidy = FALSE,
comment = NA,
message = FALSE,
warning = FALSE)
opts_knit$set(width = 75)
lm0 <- lm(hp ~ wt, mtcars)
lm1 <- lm(qsec ~ hp, mtcars)
lm2 <- lm(qsec ~ wt, mtcars)
suppressMessages(require(memisc))
lmtable123 <- mtable('Modelo 1' = lm0,
'Modelo 2' = lm1,
'Modelo 3' = lm2 #,
#summary.stats = c('R-squared','F','p','N')
)
pander(lmtable123)
install.packages("pander")
pander(lmtable123)
library(pander)
pander(lmtable123)
library(xtable)
print(xtable(summary(lm0)),type='html')
modelo_6 <- lm(log(Qtd_cotas) ~ 0 + log(Tax_adm), data = itau.s1_776)
tab_model(modelo_6)
install.packages(c("sjPlot", "sjmisc", "sjlabelled"))
# load package
suppressMessages(library(sjPlot))
suppressMessages(library(sjmisc))
suppressMessages(library(sjlabelled))
tab_model(modelo_6)
tab_model(summary(modelo_6))
summary(modelo_6)
kable(summary(modelo_6))
install.packages("stargazer")
suppressMessages(library(stargazer))
stargazer(modelo_6, type = "html")
stargazer(modelo_6)
m1 <- lm(Qtd_cotas ~ Tax_adm, data = itau.s1_776)
m2 <- lm(Qtd_cotas ~ log(Tax_adm), data = itau.s1_776)
m3 <- lm(log(Qtd_cotas) ~ log(Tax_adm), data = itau.s1_776)
suppressMessages(library(stargazer))
stargazer(m1, m2, m3, type = "text")
# ----------------------------------------------
# rodar o modelo log-log com os resultados
rmarkdown::render(here::here("outputs", "report_mqo_itau.Rmd"))
# ----------------------------------------------
# rodar o modelo log-log com os resultados
rmarkdown::render(here::here("outputs", "report_mqo_itau.Rmd"), 'html_document')
# ----------------------------------------------
# rodar o modelo log-log com os resultados
rmarkdown::render(here::here("outputs", "report_mqo_itau.Rmd"),
'html_document', encoding = "UTF-8" )
# abrir a analise
browseURL(here::here("outputs", "report_mqo_itau.html"))
# ----------------------------------------------
# rodar o modelo log-log com os resultados
rmarkdown::render(here::here("outputs", "report_mqo_itau.Rmd"),
'html_document', encoding = "UTF-8" )
# ----------------------------------------------
# rodar o modelo log-log com os resultados
rmarkdown::render(here::here("outputs", "report_mqo_itau.Rmd"),
'html_document')
